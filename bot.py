import sys
import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, FSInputFile
from aiogram.filters import Command
from telethon import TelegramClient
from dotenv import load_dotenv
import os

load_dotenv()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env

API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
PASSWORD = os.getenv("PASSWORD")
TOKEN = os.getenv("TOKEN")
CHANNEL_ID = int(os.getenv("CHANNEL_ID"))

bot = Bot(token=TOKEN)
dp = Dispatcher()
client = TelegramClient("bot_session", API_ID, API_HASH)

logging.basicConfig(level=logging.INFO)

if sys.platform.startswith("win"):
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

async def start_telethon():
    await client.start(password=PASSWORD)
    print("‚úÖ Telethon –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")

@dp.message(Command("start"))
async def cmd_start(message: Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url="https://t.me/modex_vzlom")],
        [InlineKeyboardButton(text="‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="subscribed")]
    ])
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MODEX BOT! –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø—Ä–æ—á–∏—Ç–∞–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é:",
        reply_markup=keyboard
    )

@dp.callback_query(lambda c: c.data == "subscribed")
async def subscribed_handler(callback_query: CallbackQuery):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üöÄ –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", url="https://1wprde.com/?open=register&p=vayp")]
    ])
    await callback_query.message.answer(
        "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –ø—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ, –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π 9-–∑–Ω–∞—á–Ω—ã–π ID:",
        reply_markup=keyboard
    )
    await callback_query.answer()

@dp.message()
async def check_id(message: Message):
    user_id = message.text.strip()
    if not user_id.isdigit()  or not (6 <= len(user_id) <= 12):
         await message.answer("‚ö† –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π 9-–∑–Ω–∞—á–Ω—ã–π ID!")
         return


    try:
        async for msg in client.iter_messages(CHANNEL_ID, limit=50):
            if msg.text and user_id in msg.text:
                cover = FSInputFile("cover.jpg")
                keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="üöÄ –û–¢–ö–†–´–¢–¨", url="https://t.me/skript1win_bot/skriptbot")]
                ])
                await message.answer("‚úÖ –í–∞—à ID –Ω–∞–π–¥–µ–Ω! –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω.")
                await message.answer_photo(photo=cover, caption="–û—Ç–∫—Ä—ã—Ç—å –ü—Ä–æ–≥—Ä–∞–º–º—É:", reply_markup=keyboard)
                return

        await message.answer("‚õî –í–∞—à ID –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å—Ç—Ä–æ–≥–æ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Å –∫–∞–Ω–∞–ª–∞.")

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ ID: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ –∫–∞–Ω–∞–ª—É. –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –±–æ—Ç –∞–¥–º–∏–Ω.")

async def main():
    await start_telethon()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
